name: Python Tests with Docker

on: [push]

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 10 # Увеличиваем таймаут

    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose-plugin

      - name: Start infrastructure
        run: |
          # Создаем сеть
          docker network create test-net

          # Запускаем PostgreSQL с проверкой здоровья
          docker run -d \
            --name postgres \
            --network test-net \
            -e POSTGRES_USER=user \
            -e POSTGRES_PASSWORD=password \
            -e POSTGRES_DB=lab4 \
            -p 5432:5432 \
            --health-cmd "pg_isready -U user -d lab4" \
            --health-interval 5s \
            --health-timeout 3s \
            --health-retries 10 \
            postgres:13
            
          # Ждем готовности PostgreSQL
          timeout 60s bash -c \
            'until docker inspect postgres --format "{{.State.Health.Status}}" | grep -q "healthy"; do sleep 2; done'

          # Собираем и запускаем бэкенд
          docker compose -f docker-compose.ci.yml up -d --build

          # Ждем готовности бэкенда
          sleep 20

      - name: Verify services
        run: |
          echo "--- Running containers ---"
          docker ps -a

          echo "--- PostgreSQL logs ---"
          docker logs postgres

          echo "--- Backend logs ---"
          docker logs backend

          echo "--- Health check ---"
          curl -v http://localhost:18080/api/health || true

      - name: Run tests
        env:
          API_BASE_URL: "http://localhost:18080"
          DB_HOST: "postgres"
        run: |
          cd backend/test
          pip install -r requirements.txt
          pytest -v --log-level=DEBUG

      - name: Clean up
        if: always()
        run: |
          docker compose -f docker-compose.ci.yml down
          docker stop postgres || true
          docker network rm test-net || true
          docker system prune -f
