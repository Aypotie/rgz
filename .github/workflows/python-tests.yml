name: Python Tests with Docker

on: [push]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose-plugin

      - name: Create network
        run: docker network create test-network

      - name: Start PostgreSQL
        run: |
          docker run -d \
            --name postgres \
            --network test-network \
            -e POSTGRES_USER=user \
            -e POSTGRES_PASSWORD=password \
            -e POSTGRES_DB=lab4 \
            -p 5432:5432 \
            --health-cmd "pg_isready -U user -d lab4" \
            --health-interval 10s \
            --health-timeout 5s \
            --health-retries 5 \
            postgres:13
          sleep 10

      - name: Build and start backend
        run: |
          docker compose -f docker-compose.yml build backend
          docker compose -f docker-compose.yml up -d backend
          sleep 15

      - name: Verify services
        run: |
          docker ps -a
          docker inspect postgres --format='{{.State.Health.Status}}'
          docker logs backend
          curl -v http://localhost:18080/api/health || true

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: pip install pytest requests

      - name: Run tests
        env:
          API_BASE_URL: "http://localhost:18080"
        run: |
          cd backend/test
          pytest -v

      - name: Clean up
        if: always()
        run: |
          docker compose -f docker-compose.yml down
          docker stop postgres || true
          docker network rm test-network || true
